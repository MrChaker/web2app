name: "publish"

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: install frontend dependencies
        run: npm ci

      - name: Install vcpkg
        if: matrix.platform == 'windows-latest'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat

      - name: Install OpenSSL via vcpkg
        if: matrix.platform == 'windows-latest'
        run: .\vcpkg\vcpkg install openssl:x64-windows

      - name: Set VCPKG_ROOT and OPENSSL_DIR
        if: matrix.platform == 'windows-latest'
        run: |
          $vcpkgRoot = "$pwd\vcpkg"
          $opensslDir = "$vcpkgRoot\installed\x64-windows"
          echo "VCPKG_ROOT=$vcpkgRoot" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "OPENSSL_DIR=$opensslDir" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Create .env file
        run: |
          echo "
          DATABASE_KEY=${{ env.DATABASE_KEY }} \n
          KEYGEN_ACCOUNT_ID=${{ env.KEYGEN_ACCOUNT_ID }} \n
          KEYGEN_VERIFY_KEY=${{ env.KEYGEN_VERIFY_KEY }} \n
          HEARTBEAT_INTERVAL=${{ env.HEARTBEAT_INTERVAL }}
          " > .env

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

        with:
          tagName: app-v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
